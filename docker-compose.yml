version: '3.8'

services:

  flask:
    container_name: flask
    build:
      context: ./flask_app
    ports:
      - "5000:5000"
    environment:
      - CELERY_BROKER_URL=${REDIS_URL}
      - CELERY_RESULT_BACKEND=${REDIS_URL}
      - REDIS_HOST=${REDIS_HOST}

    depends_on:
      - celery_worker

  celery_worker:
    build:
      context: ./celery_worker
    #command: celery -A celerytask worker -l INFO -Q queue2
    environment:
      - CELERY_BROKER_URL=${REDIS_URL}
      - CELERY_RESULT_BACKEND=${REDIS_URL}
#    volumes:
#      - ../flask_app:/usr/src/app/

  redis:
    image: redis:7.0.5-alpine

  gpu_test:
    image: pytorch/pytorch
    command: nvidia-smi
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]

#  gpu_celery_worker:
#    image: pytorch/pytorch
#    build:
#      context: ./gpu_celery_worker
#    #command: nvidia-smi
#    environment:
#      - NVIDIA_VISIBLE_DEVICES=all
#      - CELERY_BROKER_URL=${REDIS_URL}
#      - CELERY_RESULT_BACKEND=${REDIS_URL}
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: all
#              capabilities: [ gpu ]

#  dl_gpu_celery_worker:
#    container_name: dl_gpu
#    image: pytorch/pytorch
#    build:
#      context: ./dl_gpu_celery_worker
#    #command: nvidia-smi
#    environment:
#      - NVIDIA_VISIBLE_DEVICES=all
#      - CELERY_BROKER_URL=${REDIS_URL}
#      - CELERY_RESULT_BACKEND=${REDIS_URL}
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: all
#              capabilities: [ gpu ]